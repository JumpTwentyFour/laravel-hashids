<?php

namespace Bvtterfly\LaravelHashids;

use Bvtterfly\LaravelHashids\Exceptions\InvalidOption;

class HashIdOptions
{
    public ?string $generateHashIdFrom = null;

    public bool $autoGeneratedField = true;

    public string $type = 'int';

    public string $hashIdField = '';

    public string $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';

    public bool $generateUniqueHashIds = true;

    public int $minHashLength = 0;

    public static function create(): static
    {
        return new static();
    }

    public function generateHashIdFrom(string $fieldName): self
    {
        $this->generateHashIdFrom = $fieldName;

        return $this;
    }

    public function setGenerateUniqueHashIds(bool $unique): self
    {
        $this->generateUniqueHashIds = $unique;

        return $this;
    }

    public function saveHashIdTo(string $fieldName): self
    {
        $this->hashIdField = $fieldName;

        return $this;
    }

    public function setMinimumHashLength(int $minHashLength)
    {
        $this->minHashLength = $minHashLength;

        return $this;
    }

    public function setType(string $type)
    {
        if (! in_array($type, ['int', 'hex'])) {
            throw InvalidOption::invalidHashIdType();
        }

        $this->type = $type;

        return $this;
    }

    public function setAlphabet(string $alphabet)
    {
        $this->alphabet = $alphabet;

        return $this;
    }

    public function setAutoGeneratedField(bool $autoIncrement)
    {
        $this->autoGeneratedField = $autoIncrement;

        return $this;
    }
}
